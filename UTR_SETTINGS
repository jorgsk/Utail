[DATASETS]
# Provide paths to the RNA-seq read files. The files must be either gem-files,
# zipped gem-files, bed-files, or zipped bedfiles. The extensions must thus be
# either of: .map.gz, .gem.map.gz, .bed, or .bed.gz.
# Avoid spaces and punctuation marks (.) in the filenames to aviod problems.
#
# carrie = /users/rg/projects/NGS/Projects/ENCODE/hg19main/GingerasCarrie

K562_Cytoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Nucleus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_NucleusMinus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Nucleoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_NucleoplasmReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Chromatin = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_ChromatinReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Nucleus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_NucleusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_NucleusMinus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_NucleusMinusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# GM12878_Nucleus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# GM12878_NucleusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_CytoplasmReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Cytoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# K562_Cytoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# GM12878_Cytoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# GM12878_CytoplasmReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# HeLa-S3_Cytoplasm = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
# HeLa-S3_CytoplasmReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
K562_CytoplasmMinus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
K562_CytoplasmMinusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
GM12878_CytoplasmMinus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
GM12878_CytoplasmMinusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
HeLa-S3_CytoplasmMinus = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz
HeLa-S3_CytoplasmMinusReplicate = /home/jorgsk/work/pipeline_files/unmapped_001WC.gem.map.gz

# K562_NucleusMinus = %(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_6_1.gem.map.gz:%(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_6_2.gem.map.gz:%(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_7_1.gem.map.gz:%(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_7_2.gem.map.gz:%(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_8_1.gem.map.gz:%(carrie)s/001NMinus/genome/LID9195_FC625PLAAXX_8_2.gem.map.gz


[ANNOTATION]
# Put annotation_path = false if you don't want to use an annotation.
# Supported annotation formats: GENCODE, ENSEMBL
# If you want a stranded analysis, use 'stranded = true'. Use this if you
# supply genomic regions where you know that the strands of the genomic regions
# are factual. Use 'stranded = false' if you're just investigting general
# 'exonic' regions for example. If you supply both regional bedfiles and an
# annotation, the bedfiles will take presedence.

annotation_path = /home/jorgsk/work/pipeline_files/gencode7/gencode.v7.annotation.gtf
annotation_format = GENCODE

annotated_polyA_files = /home/jorgsk/work/3UTR/source_bedfiles/polyAdb_gencode_merged.bed 

[SUPPLIED_3UTR_BEDFILE]
# If you supply more than one bedfile, the pipeline will be run for
# each region successively. If you supply both regional bedfiles and an
# annotation, the bedfiles will take presedence.
# NOTE: the region in the bedfile must be less than 2gigbases. This is due to a
# limitation in Python's pickle module which is needed for multiprocessing.

utr_bed_path = false
#
# regdir = /home/jorgsk/work/pipeline_files/genomic_regions/non_stranded
# regdir = /home/jorgsk/work/pipeline_files/genomic_regions/stranded
# regdir = /home/jorgsk/work/pipeline_files

# utr_bed_path = %(regdir)s3UTR-exonic_non_stranded.bed:%(regdir)s/CDS-intronic_non_stranded.bed
# utr_bed_path = %(regdir)s/3UTR-exonic_stranded.bed:%(regdir)s/CDS-intronic_stranded.bed
# utr_bed_path = %(regdir)s/CDS-intronic_stranded.bed
# utr_bed_path = /home/jorgsk/work/pipeline_files/CDS-intronic_uniquelystranded
# utr_bed_path = %(regdir)s/Noncoding-intronic_uniquelystranded:%(regdir)s/5UTR-intronic_uniquelystranded
# # utr_bed_path = %(regdir)s/non_stranded/3UTR-exonic_non_stranded.bed

[CHROMOSOME1]
# only_chr1 = true:
# run the whole simulation only with chromosome 1. This is for making
# speed-runs of the program. The first time this setting is used, the
# chromosome 1 entries from the annotation file above will be filtered out to a
# separate file.
#
only_chr1 = false
# run with all chromosomes
# only_chr1 = true

[MIN_3UTR_LENGTH]
# When extracting 3UTRs from the annotation, ignore those smaller than this
# value. Setting should never be below the value for extending.
min3utrlen = 100

[GET_LENGTH]
# length = true
length = false
# if you don't care about the length of the 3UTRs, but only want their poly(A)
# sites, set 'length = false'. If you do this, you must have polya = true,
# otherwise Utail will do very little indeed ...

[POLYA_READS]
# the program will attempt to get poly(A) reads from the gem-mapped-reads. Only
# use this option if your gem-mapped reads have not been trimmed.
polya = true
# polya = false:
# the program will not use poly(A) reads
#
# polya = /some/path:
# the path to a .bed file that contains the poly(A) reads. Use this setting if
# you yourself have extracted poly(A) reads, trimmed them, and remapped them.
#
# If you set polya = true, supply the path to the gem-mapper index file
# NOTE: leve out the suffix of the index file!!
gem_mapper_index = /home/jorgsk/work/pipeline_files/gem_index/H.sapiens.genome.hg19.main


[CPU_CORES]
# Set how many cores you wish to use. default uses system_max minus 1. For
# example, with two processors that have two cores each, default is 4-1 = 3.
max_cores = 2
# max_cores = default


[RESTRICT_READS]
# Set RESTRICT_READS to the number of reads to grab from the datasets. This
# option is primarily for debugging purposes.
# restrict_reads = false:
# Use all the reads in the read-files
restrict_reads = false


[EXTEND]
# The pipeline can extend the 3UTR beyond their annotated end. This is useful
# for discovering those 3UTRs that are longer than what is reported in the
# annotation.
# When investigating annotated 3UTRs, it is recommended to let the default
# setting (500) stay. If the genomic region is something else than 3'UTR,
# extendby can be set to 0.
extend_by = 100


[HG_FASTA]
# Supply the path to a fasta file (3G) of the entire human genome. Each entry in the
# fasta file should be one chromosome. The genome version in the fasta file
# must be the same as all the genome versions to which the RNA-seq reads were
# mapped.
hg_fasta = /home/jorgsk/work/pipeline_files/hg19fasta/hg19.fa


[BIGWIG]
# The pipeline can turn the read-coverage (both ordinary reads and poly(A)
# reads) into bigWig files. These files can either be viewed on a local genome
# browser, or they can be placed in a directory from where the UCSC genome browser
# can access them. Specify below which datasets you would like to have bigWig
# files from, using
# datasets = Dset1:Deset2:Dest3...
# Alternatively, set 'bigwig = all' to make bigWig files from all
# the datsets defined in the [DATASETS] section.
#
# If you do not use 'bigwig = all', you must set 'bigwig = true', otherwise no
# files will be made.
#
# In 'save_dir' supply the directories where the bigwig files should be output,
# and in 'url' give the url for this directory (i.e, "as it appears to the internet").
#
# The process of making bigWig files may use a lot of memory. Watch with 'top'
# carefully if you have less than 4 GB RAM. Depending on the size of the
# genomic region under investigation much more could potentialyl be needed.
#
# Note that if bigWig files for the datsets are already found, they will not be
# overwritten. Thus if you want to remake the files because you changed
# something about the original read-files, you must delete the files.
#
bigwig = false
# bigwig = true
# datasets = HeLa-S3_Whole_Cell:HeLa-S3_Cytoplasm:HeLa-S3_Nucleus
datasets = K562_Cytoplasm:K562_Nucleus:K562_Whole_Cell
save_dir = /users/rg/jskancke/public_html/bigWigs
url = http://genome.crg.es/~jskancke/bigWigs

# K562_Cytoplasm_Minus:K562_Nucleus_Minus:K562_Whole_Cell_Minus

#############################################
# Below settings are for debugging-purposes #
#############################################

[UTR_LENGTH_TUNING]
# For debugging purposes. Prints an extra output file with some statistics.
# If polyA is True, you can train the cumulative percentage by seeing at what
# cumulative percentage the polyA reads are found. The default value is the
# result of this tuning in the ENCODE cell-compartment dataset.
# 
# An extra output file, cumul.stat, will be generated.
# In column 1: distances from the given cumulative point (e.g 99.5%) to the
# closest polyA cluster
# In column 2: cumulative points of the closest polyA cluster
# In column 3: RPKM values of this utr
# In column 4: length of this utr
#
# From this information distributions and distances can be generated for tuning
# the 99.5% value.
# tuning = true
tuning = false


[PLOTTING]
###############################################################
# This setting can be ignored. It is for developmental purposes.
# #############################################################
#
# List the datasets from which you wish plots to be generated
# These datasets must at a previous point have been analyzed.
# datasets = 
# datasets = K562_Cytoplasm:K562_Whole_Cell:K562_Nucleus:HeLa-S3_Cytoplasm:HeLa-S3_Whole_Cell:HeLa-S3_Nucleus:GM12878_Cytoplasm:GM12878_Whole_Cell:GM12878_Nucleus
# datasets = GM12878_Cytoplasm:GM12878_Whole_Cell:GM12878_Nucleus:K562_Cytoplasm:K562_Whole_Cell:K562_Nucleus
# datasets = GM12878_Cytoplasm:GM12878_Whole_Cell:GM12878_Nucleus
# datasets = K562_Cytoplasm:K562_Whole_Cell:K562_Nucleus:K562_Nucleoplasm:K562_Chromatin
# datasets = K562_Cytoplasm:K562_Whole_Cell:K562_CytoplasmReplicate:K562_Whole_CellReplicate
# datasets = K562_CytoplasmMinus:K562_Whole_CellMinus:K562_NucleusMinus:K562_Cytoplasm:K562_Whole_Cell:K562_Nucleus:K562_Nucleoplasm:K562_Chromatin
#
# datasets = K562_Whole_CellMinus:K562_Whole_CellMinusReplicate:K562_Whole_Cell:K562_Whole_CellReplicate:K562_Cytoplasm:K562_CytoplasmReplicate:K562_CytoplasmMinus:K562_CytoplasmMinusReplicate:K562_NucleusMinus:K562_Nucleus:K562_NucleusMinusReplicate:K562_NucleusReplicate:K562_Nucleoplasm:K562_NucleoplasmReplicate:K562_Chromatin:K562_ChromatinReplicate
# datasets = K562_NucleusMinus:K562_Nucleus:K562_NucleusMinusReplicate:K562_NucleusReplicate:K562_Nucleoplasm:K562_NucleoplasmReplicate
# datasets = K562_Nucleoplasm:K562_NucleoplasmReplicate:K562_Chromatin:K562_ChromatinReplicate
# datasets = K562_Whole_CellMinus:K562_Whole_CellMinusReplicate:K562_Whole_Cell:K562_Whole_CellReplicate
# datasets = K562_Whole_Cell:K562_Whole_CellReplicate
# datasets = K562_Nucleoplasm:K562_NucleoplasmReplicate

# datasets = K562_Cytoplasm:K562_CytoplasmReplicate:GM12878_Cytoplasm:GM12878_CytoplasmReplicate:HeLa-S3_Cytoplasm:HeLa-S3_CytoplasmReplicate
# datasets = K562_CytoplasmReplicate:GM12878_CytoplasmReplicate
# datasets = K562_CytoplasmReplicate
# datasets = GM12878_CytoplasmReplicate:GM12878_Cytoplasm
# datasets = K562_CytoplasmReplicate:K562_Cytoplasm
# datasets = HeLa-S3_CytoplasmReplicate:HeLa-S3_Cytoplasm

datasets = GM12878_Cytoplasm:GM12878_CytoplasmReplicate:GM12878_Whole_Cell:GM12878_Whole_CellReplicate:GM12878_Nucleus:GM12878_NucleusReplicate:K562_Cytoplasm:K562_CytoplasmReplicate:K562_Whole_Cell:K562_Whole_CellReplicate:K562_Nucleus:K562_NucleusReplicate:HeLa-S3_Cytoplasm:HeLa-S3_CytoplasmReplicate:HeLa-S3_Whole_Cell:HeLa-S3_Whole_CellReplicate:HeLa-S3_Nucleus:HeLa-S3_NucleusReplicate:K562_CytoplasmMinus:K562_CytoplasmMinusReplicate:K562_Whole_CellMinus:K562_Whole_CellMinusReplicate:K562_NucleusMinus:K562_NucleusMinusReplicate:HeLa-S3_CytoplasmMinus:HeLa-S3_CytoplasmMinusReplicate:HeLa-S3_Whole_CellMinus:HeLa-S3_Whole_CellMinusReplicate:HeLa-S3_NucleusMinus:HeLa-S3_NucleusMinusReplicate:GM12878_CytoplasmMinus:GM12878_CytoplasmMinusReplicate:GM12878_Whole_CellMinus:GM12878_Whole_CellMinusReplicate:GM12878_NucleusMinus:GM12878_NucleusMinusReplicate:HUVEC_Cytoplasm:HUVEC_CytoplasmReplicate:HUVEC_Whole_Cell:HUVEC_Whole_CellReplicate:HUVEC_Nucleus:HUVEC_NucleusReplicate:HUVEC_CytoplasmMinus:HUVEC_CytoplasmMinusReplicate:HUVEC_Whole_CellMinus:HUVEC_Whole_CellMinusReplicate:HUVEC_NucleusMinus:HUVEC_NucleusMinusReplicate:HEPG2_Cytoplasm:HEPG2_CytoplasmReplicate:HEPG2_Whole_Cell:HEPG2_Whole_CellReplicate:HEPG2_Nucleus:HEPG2_NucleusReplicate:HEPG2_CytoplasmMinus:HEPG2_CytoplasmMinusReplicate:HEPG2_Whole_CellMinus:HEPG2_Whole_CellMinusReplicate:HEPG2_NucleusMinus:HEPG2_NucleusMinusReplicate

# set length to false if you don't want to read the length files when plotting
length = false
