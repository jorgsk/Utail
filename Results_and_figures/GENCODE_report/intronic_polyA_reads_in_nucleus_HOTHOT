You find in extraordinary large amount of poly(A) reads in the nucleus and
nucleoplasm, yet not in the cytoplasm, in CDS-introns.

These could be remnants of degraded mRNAs that are not allowed to escape the
nucleus.

One source could be mis-polyadenylated sequences that are subsequently
degraded.

Another, probably bigger source, is that polyadenylation is used as part of the
degradation process. A poly(A) tail makes it easier for the exosome to degrade
RNA fragments. This is remnisent of what happens in bacteria.

In yeast, the TRAMP poly(A) machinery has been identifier as a poly(A) adder to
RNA-to-be-degraded. No human homolog has been found yet, I believe, although
there are sequencse homologies.

Your data would give nice credit to the idea that there is
degradatio-by-poly(A) in the nucleus.

Compare the poly(A) clusters you get in the nucleus/chromatin with the clusters
you get in the cytoplasm. Are they different?

You have also saved a paper showing that polyadenylation happens in the
cytoplamsn of humans as part of the degradation pathway. Hey ho!

In yeast, TRAMP (polyadenylater) associates with Rrp6p for degradation in the
nucleus, whereas in mammals the Rrp6p ortholog, PM/ Scl100, is observed in both
the cytoplasm and nucleus (cite: RNA quality control in eukaryotes). The
homolog is observed in the cytoplasm and nucleus, and the small poly(A)s are
observed in the cytoplasm and nucleus in human/mammal! This points toward
poly(A) tail degradation by a similar mechanism.

Short poly(A) tails have been shown for pre-messenger RNA as well, with an
unknown processing mechanism. These ranged from 1-7 in size, and some of them
were not pure poly(A), they were poly(A) with other nucleotides as well.

In the 2010 article, they worked with a rRNA or beta globin gene. They find
polyadenylation here in certain sites both in the nucleus and cytoplasm,
indicating that the degradation sites are conserved. Perhaps due to structures?
It coul be that the poly(A) tail is only there to facilitate degradation of
RNAS with struvtures in the 3' end because the exonucleases can't work well
with structured ends.

Further, from RNA-seq evidence, the C elegans paper found polyadenylation at
the end of histone 3UTRs. They interpret this as standard processing, not as
degradation related, but speculate that this will be found in higher metazoans.
Maybe you can have a look, if the histone genes are included in your set.

Further, from the plant rna-seq paper, they detect poly(A) sites in introns,
and speculate why they are there. They do full-cell sequencing. Perhaps their
non-explainable PAC (poly(A) site clusters) come from the nucleus only.

The Ozolac Cell december 2010 paper get lots of PAT reads. About the intronic
ones in yeast, they say:
"Intronic polyadenylation sites are possibly due to a dynamic interplay
between splicing and polyadenylation (Tian et al., 2007) and may represent
transcripts encoding shorter proteins". 

They do find some reads in human rRNA, a 2500, and speculate "fraction of rRNAs
are polyadenylated, perhaps for the purposes of degradation", with the relevant
citations. So the cat is out of the box.

Another point is that the previous RNA-seq experiments have worked with whole
cell. Whole cell experiments emphasize the cytocolic compartment in terms of
RNA-volume, something which gives a lower resolution to what happens in the
nucleus, simply because there are fewer reads there than in the cytosol. Try to
show this contrast using your whole cell data.

Another point is that you adress split-mapped reads. This is not commonly
adressed in the studies you have looked at, and could explain some of the reads
landing in their exons. This approach removes false positives, but also some
positives (if you care to, measure against annotated poly(A) sites)

A big TODO is checking the orientation of the poly(A) reads relative to the
introns in which they land. You need thus generate an intron-single strand
region to verify your result. UPDATE you have presently done this. The result
is as follows (last number the ones with same strand):

11990 onlypolyA_GM12878_Nucleus_CDS-intronic 7322
12121 onlypolyA_GM12878_NucleusReplicate_CDS-intronic 8000
29932 onlypolyA_K562_Chromatin_CDS-intronic 20077
16472 onlypolyA_K562_ChromatinReplicate_CDS-intronic 9118
26059 onlypolyA_K562_Nucleoplasm_CDS-intronic 18826
34598 onlypolyA_K562_NucleoplasmReplicate_CDS-intronic 23555
7066 onlypolyA_K562_Nucleus_CDS-intronic 3283
12640 onlypolyA_K562_NucleusMinus_CDS-intronic 6829
8325 onlypolyA_K562_NucleusMinusReplicate_CDS-intronic 5286
6541 onlypolyA_K562_NucleusReplicate_CDS-intronic 3471

As can be seen, there is an enrichment in all of them, but the enrichment is
weak. Chromatin is clearer than nucleus, and nucleoplasm is clearer than
chromatin. In nucleoplasm roughly 70% map to the strand we think. By
comparison, for 3UTRs it's around 90%. What about 5UTR introns? 5UTR introns
display the same behavor as CDS introns, thank god. Compare the two replicas:
do you find any that match?

Most of those reads in the intergenic region have only 1 representative. The
data for the rRNA seems to indicate that the poly(A) sites are site specific,
at least for a given RNA. In that case, we could se a clustering of these sites
among different datasets. That would be a solid indication. A further further
step would be to fold the RNAs and look for structures that could force such a
polyadenylation.

I think you need to do the following:

1) Show that the poly(A) sites in nucleus/chromatin/cytoplasm are different
2) Compare nuc/chr/cyt for 3UTR and CDS intronic next to each other, for visual
effect.
4) Show the distribution of poly(A) locations in the CDS intronic regions. For
example, if there are 5 introns, plot the occurence in each of the introns.
Since different genes have different # of introns, make some kind of measure
for this. The idea is that you show that there is only a weak distribution of
the intronic poly(A) sites toward the 3'end. If the pol(A) tails come from
cleavage+polyadenylation you expect them to be located toward the 3' end.
3) Show that the poly(A) tails at the end of the 3UTRs are more pure poly(A),
they have more poly(A) read coverage. Conversely, show that the intronic
poly(A) tails are more 'choppy'

Show how this is different in poly(A)+ and poly(A)- datasets! :)


